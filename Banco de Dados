-- Criação do banco de dados
CREATE DATABASE biblioteca;
USE biblioteca;

-- Tabela de Autores
CREATE TABLE autores (
    id_autor INT PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(100) NOT NULL,
    nacionalidade VARCHAR(50),
    data_nascimento DATE
);

-- Tabela de Categorias
CREATE TABLE categorias (
    id_categoria INT PRIMARY KEY AUTO_INCREMENT,
    nome_categoria VARCHAR(50) NOT NULL,
    descricao TEXT
);

-- Tabela de Livros
CREATE TABLE livros (
    id_livro INT PRIMARY KEY AUTO_INCREMENT,
    titulo VARCHAR(200) NOT NULL,
    id_autor INT,
    id_categoria INT,
    ano_publicacao INT,
    isbn VARCHAR(20) UNIQUE,
    quantidade_estoque INT NOT NULL DEFAULT 0,
    FOREIGN KEY (id_autor) REFERENCES autores(id_autor),
    FOREIGN KEY (id_categoria) REFERENCES categorias(id_categoria)
);

-- Tabela de Leitores
CREATE TABLE leitores (
    id_leitor INT PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE,
    telefone VARCHAR(20),
    data_cadastro DATE NOT NULL
);

-- Tabela de Empréstimos
CREATE TABLE emprestimos (
    id_emprestimo INT PRIMARY KEY AUTO_INCREMENT,
    id_livro INT,
    id_leitor INT,
    data_emprestimo DATE NOT NULL,
    data_prevista_devolucao DATE NOT NULL,
    data_devolucao DATE,
    status VARCHAR(20) NOT NULL DEFAULT 'Em Andamento',
    FOREIGN KEY (id_livro) REFERENCES livros(id_livro),
    FOREIGN KEY (id_leitor) REFERENCES leitores(id_leitor)
);

-- Inserção de dados de exemplo
INSERT INTO autores (nome, nacionalidade, data_nascimento) VALUES 
('Machado de Assis', 'Brasileira', '1839-06-21'),
('Jorge Amado', 'Brasileira', '1912-08-10'),
('Gabriel García Márquez', 'Colombiana', '1927-03-06');

INSERT INTO categorias (nome_categoria, descricao) VALUES 
('Romance', 'Obras narrativas de ficção'),
('Ficção Científica', 'Histórias baseadas em conceitos científicos ou tecnológicos'),
('História', 'Obras que retratam eventos históricos');

INSERT INTO livros (titulo, id_autor, id_categoria, ano_publicacao, isbn, quantidade_estoque) VALUES 
('Dom Casmurro', 1, 1, 1899, '978-8535913576', 10),
('Capitães da Areia', 2, 1, 1937, '978-8535913583', 15),
('Cem Anos de Solidão', 3, 1, 1967, '978-8535913590', 8);

INSERT INTO leitores (nome, email, telefone, data_cadastro) VALUES 
('Maria Silva', 'maria@email.com', '(11) 98765-4321', '2024-01-15'),
('João Santos', 'joao@email.com', '(21) 97654-3210', '2024-02-20');

-- Trigger para atualizar estoque de livros após empréstimo
DELIMITER $$

CREATE TRIGGER atualiza_estoque_apos_emprestimo 
AFTER INSERT ON emprestimos
FOR EACH ROW
BEGIN
    -- Reduz a quantidade de estoque quando um livro é emprestado
    UPDATE livros 
    SET quantidade_estoque = quantidade_estoque - 1
    WHERE id_livro = NEW.id_livro;
END$$

DELIMITER ;

-- Trigger para atualizar estoque de livros após devolução
DELIMITER $$

CREATE TRIGGER atualiza_estoque_apos_devolucao
AFTER UPDATE ON emprestimos
FOR EACH ROW
BEGIN
    -- Aumenta a quantidade de estoque quando um livro é devolvido
    IF NEW.data_devolucao IS NOT NULL AND OLD.data_devolucao IS NULL THEN
        UPDATE livros 
        SET quantidade_estoque = quantidade_estoque + 1
        WHERE id_livro = NEW.id_livro;
    END IF;
END$$

DELIMITER ;

-- Exemplo de uso dos triggers
-- Realizando um empréstimo (que vai reduzir o estoque)
INSERT INTO emprestimos (id_livro, id_leitor, data_emprestimo, data_prevista_devolucao) 
VALUES (1, 1, '2024-05-01', '2024-05-15');

-- Devolvendo o livro (que vai aumentar o estoque)
UPDATE emprestimos 
SET data_devolucao = '2024-05-10', status = 'Concluído'
WHERE id_livro = 1 AND id_leitor = 1;
